diff --git a/node_modules/docusaurus-preset-shiki-twoslash/docusaurus-theme-shiki-twoslash/theme/CodeBlock/index.js b/node_modules/docusaurus-preset-shiki-twoslash/docusaurus-theme-shiki-twoslash/theme/CodeBlock/index.js
index 01bcfb9..75344f2 100644
--- a/node_modules/docusaurus-preset-shiki-twoslash/docusaurus-theme-shiki-twoslash/theme/CodeBlock/index.js
+++ b/node_modules/docusaurus-preset-shiki-twoslash/docusaurus-theme-shiki-twoslash/theme/CodeBlock/index.js
@@ -3,17 +3,64 @@
 
 import "./styles.css"
 
-import copy from "copy-text-to-clipboard"
 import React, { useRef, useState } from "react"
 import Translate, { translate } from "@docusaurus/Translate"
 
+function copyTextToClipboard(input, {target = document.body} = {}) {
+	const element = document.createElement('textarea');
+	const previouslyFocusedElement = document.activeElement;
+
+	element.value = input;
+
+	// Prevent keyboard from showing on mobile
+	element.setAttribute('readonly', '');
+
+	element.style.contain = 'strict';
+	element.style.position = 'absolute';
+	element.style.left = '-9999px';
+	element.style.fontSize = '12pt'; // Prevent zooming on iOS
+
+	const selection = document.getSelection();
+	let originalRange = false;
+	if (selection.rangeCount > 0) {
+		originalRange = selection.getRangeAt(0);
+	}
+
+	target.append(element);
+	element.select();
+
+	// Explicit selection workaround for iOS
+	element.selectionStart = 0;
+	element.selectionEnd = input.length;
+
+	let isSuccess = false;
+	try {
+		isSuccess = document.execCommand('copy');
+	} catch {}
+
+	element.remove();
+
+	if (originalRange) {
+		selection.removeAllRanges();
+		selection.addRange(originalRange);
+	}
+
+	// Get the focus back on the previously focused element, if any
+	if (previouslyFocusedElement) {
+		previouslyFocusedElement.focus();
+	}
+
+	return isSuccess;
+}
+
+
 const CodeBlock = ({ children, ...props }) => {
   const pre = useRef(null)
   const [showCopied, setShowCopied] = useState(false)
 
   const handleCopyCode = () => {
     if (pre.current) {
-      copy(Array.from(pre.current.querySelectorAll("code div.line")).map(el => el.textContent).join("\n"))
+      copyTextToClipboard(Array.from(pre.current.querySelectorAll("code div.line")).map(el => el.textContent).join("\n"))
     }
     setShowCopied(true)
     setTimeout(() => setShowCopied(false), 2000)
